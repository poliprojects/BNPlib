# ADJUSTED RAND-INDEX SCORE
MAXITER 500
BURN-IN 100
Test 1: Rand index score: 1.0
Test 2: Rand index score: 0.9879166470544726
Test 3: Rand index score: 0.6656213747405262
Test 4: Rand index score: 0.9900498146844491
Test 5: Rand index score: 1.0
Test 6: Rand index score: 1.0





# CALLGRIND + KCACHEGRIND
## STANDARD
Tools used: valgrind --tool=callgrind main, then KCacheGrind app
Uni:
* run() <40%, eval_density() 20%, cluster_estimate() >40%
* As for run(), almost all time spent in step() (-> collecting is irrelevant),
  more specifically in sample_allocations() (33%)
* like() takes a total of 20% across run() and eval_density()
  times
Multi:
* run() <10%, eval_density() amost 90%
* cluster_estimate() has become irrelevant
* As for run(), sample_allocations() takes 5%
* eval_marg() >60%, presumably due to matrix inversion and Student's t
  evaluation, both of which require expensive Cholesky decompositions
* like() is the same order of magnitude as before (27%)
* since estimate algorithms have not changed, this means like() is optimized
  enough for it to withstand the jump to the multidim case better than the
  other functions

## WITHOUT OPTIMIZATION FLAGS
Uni:
* run() >40%, eval_density() <30%, cluster_estimate() 30% -> evenly distributed
* As for run(), almost all time spent in step() (-> collecting is irrelevant),
  with sample_allocations() being the main component at almost 40%
* like() takes a total of >30% and 6M calls across run() and eval_density()
  times
Multi:
* run() 58%, eval_density() 40%
* cluster_estimate() same
* eval_marg() >50%, rest is the same
* like() has become only 17%
